16 roadmap

instrument, track:
    when looking at combined bit commands (vibrato, track note + wait),
    underline the separated values in the help/info area.


map:
    copy tiles when changing map dimensions

game.c
    game edit menu, also set to play
    goes before map edit in SELECT route.  
    press START to play
        warn if map is not saved

run.c:
    tile translation
    hide sprites which are completely set inside another block with zero velocity.
        - compute a "hidden" property (set z=0 to hide) when transitioning to run mode
        - reset when going to map mode (always z=1 or higher)
        BUG HERE, not sure why not everything is hiding
    
    sprites:
        run sprite commands
            * look
        collisions, damage tacking

    sprite attacks on tiles, too.
    
    do we want to allow for connected sprites?  (e.g. swinging a sword sprite, attached to player or enemy, or power-up makes you twice as tall, etc.)

sprite pattern commands:  no loops are possible, march through commands

    look for closest player, change direction based on argument


allow for more than 4 unlock commands, 
    4 tied to tiles, 
    one for startup / level initialization, 
    one for game loop, (constantly running)
    one for win,
    one for dead,

unlock pattern commands:
    wait
    set letter box -- add black lines above/below the play field
    set letter box delta
    set spawn location x, y (needs 14 bits total for both x,y)
    spawn sprite
    spawn tile (this can also destroy a tile if you spawn an "air" tile)
    randomize command
    set spawn location to player location (2 bits for offset in each direction)
    set spawn location delta x, y
    shake screen
    make noise
    set game-type (platformer, top-down adventure, shmup)
        for platformers, set strength of gravity 

sprite drawing:
    try blitting to a u4 buffer, then drawing to draw_buffer as u32,
    using u32 words (u16 color * 2, 256 indexes in super_palette)

anthem:
    transpose rows/columns, to be more in line with inst and verse editors


G16 file format

a bunch of curly brace patterns, with nested groups in square brackets
comments can follow after a space from any valid specifier.
MAYBE NIX the comments, at least for instrument/verse/anthem.  (see C16 format below.)

{palette:OPTIONAL_NUMBER_COLORS_SPECIFIED
    0:v33 RGB, from 0 to v each
    1:5cf this is a comment
    234 don't have to specify the index, but it will increment afterwards.
    680 will give an error if you jump to a new index which would overwrite something else
    5:bbb   this is ok, though, since we're monotonically increasing
} end brace comes on new line, this is a comment after the brace.
{anthem:OPTIONAL_LENGTH
    1111    # 0 to f possible for each of 4 instrument players.  errors otherwise.
    2222    # leading white space ignored, everything after 4 characters is ignored
    ...     # only the newline is not ignored.  (so you can comment things like this.)
    5:6666  # you can provide the index number (0-v) if you like, just use colon.
}
{instrument:OPTIONAL_NUMBER_INSTRUMENTS_SPECIFIED
    [0:OPTIONAL_NUMBER_LINES_SPECIFIED in what follows, line numbers are optional, but must be followed by a colon
        0:0g    break has permitted values 00 to 0g.  (g == 0)
        1:S8    side has permitted values S0 to Sf, S8 is centered, S0 is silent, S1 = L, Sf = R
        2:V3    volume can be V0 to Vf
        3:#=    waveform: #s (sine), #^ (triangle), #/ (saw), #_ (square), #= (white noise), #\ (red noise), #/ (violet noise), #* (anything, space, blank)
        4:C0    note.  permitted values C0 to Cf (C0 = C, Cf = Eb octave above)
        5:Wg    wait, permitted values W1 to Wg
        6:<0    crescendo, values <0 to <f
        7:>3    decrescendo, values >1 to >g
        8:if    inertia, note slides, i0 to if
        9:~f    vibrato, ~0 to ~f.  2 bits for rate, 2 bits for amplitude
        a:/7    bend up, /0 to /7.  bend down: \ from \1 to \8
        b:B3    bitcrush, B0 to Bf
        c:D1    duty, D0 to Df
        d:d3    duty delta, d0 to df
        e:Ra    randomize, permitted values: Ra (any), Ro (odd), Re (even), Rs (scattered, 1, 8, 15), Rl (low), Rm (mid), Rh (high), Rb (book case, top or bottom), RL (very low), RK (mid-low), RJ (mid-hi), RH (very high), R0 (remainder zero by four), R1 (remainder1), R2 (remainder 2), R3 (remainder 3)
        f:J3    jump, permitted values 0 to f
    ] no commas necessary
    [1 next instrument, and so on

    ] everything after an end brace is a comment
} actually, everything after any valid sequence is a comment, until the newline.
{verse format is p-t, where p is the player (0-3) and t is the track (0-f)
    [0-0:OPTIONAL_NUMBER_LINES_SPECIFIED
        0:0g    break or wait until quarter note
        1:O3    octave (O0 to O6), absolute octave (O=), wrap (/1 \1 or /2 \2) or up/down only (+1 -1 +2 -2)
        2:I3    instrument, I0 to If
        3:V3    volume, V0 to Vf
        4:C3    note, C0 (C) to Cf (Eb next octave up)
        5:W3    wait, W1 to Wg
        6:N0    note+wait, N0 to Nf.  2 bits for relative note, 2 bits for wait
    ]
}

C16 chip format
    layout instrument, verse, and anthem in ASCII format, easily searched by length, no comments allowed, no brackets or spaces or newlines.
    make anthem last, allow for up to 64 in length.

C16
{i[
   0:0g  # this comment is not allowed.  offset: 8 bytes, data at byte 13 and 14
   1:S5  # offset 16 bytes, data at 21 and 22
   ...
   f:0g  # offset 128 bytes, data at 133, 134
  ] # offset 136
  [ # offset 140
   0:0g # offset 144, data at bytes 149, 150
   ...
  ]
  ...
  [     # 16 instrument, last one ends a bit different
   ...
]i}
{v[
  ]
  ...
  [
]v}
{a:g
   2222
   ...
}
